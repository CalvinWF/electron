From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Kenichi Ishibashi <bashi@chromium.org>
Date: Mon, 16 Aug 2021 03:24:27 +0000
Subject: Remove --no-untrusted-code-mitigations from //content and //gin

The V8 flag was removed in crrev.com/c/3045704.

Bug: 1003890
Change-Id: Ic2dc0bfa982609bb71ae3fa0b72b47b7c456cd12
Reviewed-on: https://chromium-review.googlesource.com/c/chromium/src/+/3096585
Reviewed-by: Matt Falkenhagen <falken@chromium.org>
Reviewed-by: Kentaro Hara <haraken@chromium.org>
Commit-Queue: Kenichi Ishibashi <bashi@chromium.org>
Cr-Commit-Position: refs/heads/master@{#912056}

diff --git a/content/browser/renderer_host/render_process_host_impl.cc b/content/browser/renderer_host/render_process_host_impl.cc
index 8c6a0d9362c01f448496d55a7702e294a66061d8..b6b26ce465407a75dd8e15138187d614a3415941 100644
--- a/content/browser/renderer_host/render_process_host_impl.cc
+++ b/content/browser/renderer_host/render_process_host_impl.cc
@@ -3374,11 +3374,6 @@ void RenderProcessHostImpl::AppendRendererCommandLine(
 
   command_line->AppendSwitchASCII(switches::kRendererClientId,
                                   std::to_string(GetID()));
-
-  if (SiteIsolationPolicy::UseDedicatedProcessesForAllSites()) {
-    // Disable V8 code mitigations if renderer processes are site-isolated.
-    command_line->AppendSwitch(switches::kNoV8UntrustedCodeMitigations);
-  }
 }
 
 void RenderProcessHostImpl::PropagateBrowserCommandLineToRenderer(
diff --git a/content/public/common/content_switches.cc b/content/public/common/content_switches.cc
index 244cada7aba83fd04e1d2e6c153f9d0f0265b0a4..e4a9307682f69650cb66220586a379c60ea6c755 100644
--- a/content/public/common/content_switches.cc
+++ b/content/public/common/content_switches.cc
@@ -615,9 +615,6 @@ const char kNoUnsandboxedZygote[] = "no-unsandboxed-zygote";
 // zygote to work.
 const char kNoZygote[] = "no-zygote";
 
-// Disables V8 mitigations for executing untrusted code.
-const char kNoV8UntrustedCodeMitigations[] = "no-v8-untrusted-code-mitigations";
-
 // Number of worker threads used to rasterize content.
 const char kNumRasterThreads[]              = "num-raster-threads";
 
diff --git a/content/public/common/content_switches.h b/content/public/common/content_switches.h
index ff10b149fca51a9d6ac0d4e3f71e2e130e6c92c7..04ff249ee3e4ed6a2b21e049d470bab359dec32e 100644
--- a/content/public/common/content_switches.h
+++ b/content/public/common/content_switches.h
@@ -175,7 +175,6 @@ CONTENT_EXPORT extern const char kMojoCoreLibraryPath[];
 CONTENT_EXPORT extern const char kMojoLocalStorage[];
 CONTENT_EXPORT extern const char kNoUnsandboxedZygote[];
 CONTENT_EXPORT extern const char kNoZygote[];
-extern const char kNoV8UntrustedCodeMitigations[];
 CONTENT_EXPORT extern const char kNumRasterThreads[];
 CONTENT_EXPORT extern const char kPpapiInProcess[];
 extern const char kPpapiPluginLauncher[];
diff --git a/content/renderer/render_process_impl.cc b/content/renderer/render_process_impl.cc
index 6c38eddb1e77b7ff0100ae4fd1a2b0da85368905..b80077028cadf788ec18eb8cfd1cf4c7fd91ca1c 100644
--- a/content/renderer/render_process_impl.cc
+++ b/content/renderer/render_process_impl.cc
@@ -270,12 +270,6 @@ RenderProcessImpl::RenderProcessImpl()
   }
 #endif  // defined(OS_MAC) && defined(ARCH_CPU_X86_64)
 
-  if (command_line->HasSwitch(switches::kNoV8UntrustedCodeMitigations)) {
-    const char* disable_mitigations = "--no-untrusted-code-mitigations";
-    v8::V8::SetFlagsFromString(disable_mitigations,
-                               strlen(disable_mitigations));
-  }
-
   if (command_line->HasSwitch(switches::kJavaScriptFlags)) {
     std::string js_flags =
         command_line->GetSwitchValueASCII(switches::kJavaScriptFlags);
diff --git a/gin/v8_initializer.cc b/gin/v8_initializer.cc
index a569b434da52537fdba02dd2c0df9fa83f00f3fa..9c0946949244116b60a5808029f3fe9b2bcfa976 100644
--- a/gin/v8_initializer.cc
+++ b/gin/v8_initializer.cc
@@ -359,8 +359,6 @@ void V8Initializer::Initialize(IsolateHolder::ScriptMode mode,
 
   if (base::FeatureList::IsEnabled(features::kV8UntrustedCodeMitigations)) {
     SetV8Flags("--untrusted-code-mitigations");
-  } else {
-    SetV8Flags("--no-untrusted-code-mitigations");
   }
 
   if (base::FeatureList::IsEnabled(features::kV8ScriptAblation)) {
